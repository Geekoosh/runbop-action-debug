name: Test
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DEBUGGABLE_RUNNER: true
      SIGNAL_PATH: /tmp/debug_signal_test_custom

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          npm ci
          npm run build

      # Test 1: Timeout scenario
      - name: Test timeout
        uses: ./
        id: timeout-test
        with:
          timeout: 5
          signal-path: ${{ env.SIGNAL_PATH }}

      - name: Verify timeout
        run: |
          if [ "${{ steps.timeout-test.outputs.reason }}" != "timeout" ]; then
            echo "Expected timeout, got ${{ steps.timeout-test.outputs.reason }}"
            exit 1
          fi

      # Test 2: Normal continuation with background signal
      - name: Setup background signal
        run: |
          (sleep 5 && echo "env=TEST_VAR=test_value" > ${{ env.SIGNAL_PATH }}) &

      - name: Test continuation
        uses: ./
        id: continue-test
        with:
          timeout: 30
          signal-path: ${{ env.SIGNAL_PATH }}

      - name: Verify continuation
        run: |
          if [ "${{ steps.continue-test.outputs.reason }}" != "next" ]; then
            echo "Expected next, got ${{ steps.continue-test.outputs.reason }}"
            exit 1
          fi
          if [ "$TEST_VAR" != "test_value" ]; then
            echo "Environment variable not set correctly"
            exit 1
          fi

      # Test 3: Fail scenario
      - name: Setup fail signal
        run: |
          (sleep 5 && echo "fail" > ${{ env.SIGNAL_PATH }}) &

      - name: Test fail
        uses: ./
        id: fail-test
        continue-on-error: true
        with:
          timeout: 30
          signal-path: ${{ env.SIGNAL_PATH }}

      - name: Verify fail
        run: |
          if [ "${{ steps.fail-test.outputs.reason }}" != "failed" ]; then
            echo "Expected failed, got ${{ steps.fail-test.outputs.reason }}"
            exit 1
          fi
          if [ "${{ steps.fail-test.outcome }}" != "failure" ]; then
            echo "Expected step to fail"
            exit 1
          fi
